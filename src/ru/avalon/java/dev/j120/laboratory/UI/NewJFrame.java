/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.avalon.java.dev.j120.laboratory.UI;

import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import ru.avalon.java.dev.j120.laboratory.Application;
import static ru.avalon.java.dev.j120.laboratory.Application.createGoodList;
import ru.avalon.java.dev.j120.laboratory.Dao.OrderProductDao;
import ru.avalon.java.dev.j120.laboratory.Dao.OrderProductDatabaseDao;
import ru.avalon.java.dev.j120.laboratory.Dao.PersonDatabaseDao;
//import static ru.avalon.java.dev.j120.laboratory.Application.good;
//import static ru.avalon.java.dev.j120.laboratory.Application.order;
//import static ru.avalon.java.dev.j120.laboratory.Application.orderProductList;
//import static ru.avalon.java.dev.j120.laboratory.Application.productLoad;
import ru.avalon.java.dev.j120.laboratory.Dao.ProductDao;
import ru.avalon.java.dev.j120.laboratory.Dao.ProductDatabaseDao;
import ru.avalon.java.dev.j120.laboratory.IO.GoodListIO;
import ru.avalon.java.dev.j120.laboratory.IO.OrderIO;
import ru.avalon.java.dev.j120.laboratory.IO.OrderListIO;
import ru.avalon.java.dev.j120.laboratory.IO.OrderProducListIO;
import ru.avalon.java.dev.j120.laboratory.entity.Order;
import ru.avalon.java.dev.j120.laboratory.entity.OrderProduct;
import ru.avalon.java.dev.j120.laboratory.entity.OrderStatus;
import ru.avalon.java.dev.j120.laboratory.entity.Person;
import ru.avalon.java.dev.j120.laboratory.entity.Product;

/**
 *
 * @author buzzz
 */
public class NewJFrame extends javax.swing.JFrame {
    ArrayList<Product> products;
    LinkedHashSet<OrderProduct> orderProduct = new LinkedHashSet<OrderProduct>();
    ArrayList<Order> orders = new ArrayList<Order>();

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Программа по управлению заказами магазина");

        jButton1.setText("Обновить склад");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Смотреть список товаров");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Смотреть все заказы");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Отгрузить заказ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Ввод количества товара:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton5.setText("Добавить выбранный товар в заказ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Имя заказчика:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Адрес доставки:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Номер телефона заказчика:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Скидка %:");

        jButton6.setText("Сформировать заказ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton9.setText("Отменить заказ");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Удалить заказ");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 860, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 17, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(11, 11, 11)
                        .addComponent(jButton2)
                        .addGap(25, 25, 25)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addGap(9, 9, 9)
                        .addComponent(jButton4)
                        .addGap(8, 8, 8)
                        .addComponent(jButton9)
                        .addGap(8, 8, 8)
                        .addComponent(jButton10))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1))
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap())
        );

        jLabel7.getAccessibleContext().setAccessibleName("Скидка %:");
        jLabel7.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Кнопка "Обновить склад":
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = jFArrayList(); // Метод jFArrayList() возвращает коллекцию товаров в вид массива
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        
        jLabel1.setText("Список товаров обновлен");
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    // Кнопка "Смотреть список товаров":
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        jArrayList();
        
        if (jArrayList() == null) return;
        
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = jArrayList(); // Метод jFArrayList() возвращает коллекцию товаров в виде массива
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        
        jLabel1.setText("Что бы сформировать заказ выбирите товар из списка, введите количество и данные заказчика");
        
    }//GEN-LAST:event_jButton2ActionPerformed
  
    // Кнопка "Добавить выбранный товар в заказ":
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        int quanitiGood;  // Количество выбранного товара
        
        int id = jList1.getSelectedIndex(); // Индекс выбранного товара
        
        quanitiGood = (Integer.parseInt(jTextField1.getText()));
        
        if (products.get(id).setStockBalance(quanitiGood)) {
            jLabel1.setText("Недостаточное количество товара на складе, введите другое количество");
            
        } else {
            
            // Добавление в строку заказа данных о товаре:
            if (orderProduct.contains(new OrderProduct(products.get(id).getArticleNumber(),
            products.get(id).getName(), products.get(id).getColor(), quanitiGood,
            products.get(id).getPrice()))) {
            jLabel1.setText("Такой товар уже есть в заявке, выберете другой товар");
                
            } else {
            
                orderProduct.add(new OrderProduct(products.get(id).getArticleNumber(),
                products.get(id).getName(), products.get(id).getColor(), quanitiGood,
                products.get(id).getPrice()));
                
                // Сохранение списка заказанных товаров в БД
                OrderProductDatabaseDao orderProductDao = new OrderProductDatabaseDao();
                OrderProduct newOrderProduct = orderProductDao.findById(products.get(id).getArticleNumber());
                newOrderProduct = new OrderProduct(products.get(id).getArticleNumber(),
                products.get(id).getName(), products.get(id).getColor(), quanitiGood,
                products.get(id).getPrice());
                orderProductDao.save(newOrderProduct);
                
                
                
                jLabel1.setText("Товар добавлен, выбирите еще товары, либо продолжайте заполнять контактные данные ");
            
            }
        }     
    }//GEN-LAST:event_jButton5ActionPerformed
    
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    // Кнопка "Сформировать заказ":
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        if ("[]".equals(orderProduct.toString())) {
            jLabel1.setText("!!! В заказе отсутствуют товары. Добавьте товары в заказ"); 
        } else {
        
        String contactPerson = jTextField2.getText();
        String deliveryAdress = jTextField3.getText();
        String phoneNumber = jTextField4.getText();
        int discount;
        if ("".equals(jTextField5.getText())) {
            discount = 0;
        } else {
            discount = (Integer.parseInt(jTextField5.getText()));
        }
        
        Person person = new Person(contactPerson, deliveryAdress, phoneNumber);
        
        // Сохранение Person в БД
        PersonDatabaseDao personDao = new PersonDatabaseDao();
        Person newPerson = personDao.findById(1);
        newPerson = new Person(contactPerson, deliveryAdress, phoneNumber);
        personDao.save(newPerson);
        
        // Добавление статуса заявки:
        OrderStatus orderStatus = OrderStatus.PREPARING;
        String orderstatus = orderStatus.getStatus();
        
        // Создание объекта завка:
        Order order = new Order(LocalDate.now(), person, orderstatus, orderProduct, discount);
        
        orders.add(order);
        
        jLabel1.setText("Заказ сформирован");
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    
    // Кнопка "Смотреть все заказы":
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        if ("[]".equals(orders.toString())) {
            jLabel1.setText("Заказов нет");
        } else {
            
            jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = jFArrayOrdertList();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
            });                              
        } 
    }//GEN-LAST:event_jButton3ActionPerformed
    
    // Кнопка "Отгрузить заказ":
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        int id = jList1.getSelectedIndex();
        
        if (id == (-1)) {
            jLabel1.setText("Выбирите заказ, который должен быть отгружен");
        } else {
        
            OrderStatus orderStatusRed = OrderStatus.SHIPPED;
            String orderstatus = orderStatusRed.getStatus();
            orders.get(id).setOrderStatus(orderstatus);
        
            jLabel1.setText("Выбранный заказ отгружен");
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    // Кнопка "Отменить заказ":
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        int id = jList1.getSelectedIndex();
        
        if (id == (-1)) {
            jLabel1.setText("Выбирите заказ, который должен быть отменен");
        } else {
        
            OrderStatus orderStatusRed = OrderStatus.CANCELED;
            String orderstatus = orderStatusRed.getStatus();
            orders.get(id).setOrderStatus(orderstatus); 
        
            jLabel1.setText("Выбранный заказ отменен");
        }
    }//GEN-LAST:event_jButton9ActionPerformed
    
    // Кнопка "Удалить заказ":
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        
        
        int idx = jList1.getSelectedIndex();
        
        if (idx == (-1)) {
            jLabel1.setText("Выбирите заказ, который должен быть удален");
        } else {
            orders.remove(idx); // Удаление выбранной заявки из коллекции.
          
        
            jLabel1.setText("Выбранный заказ удален");
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main2() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables

    
    // Загружает коллекцию товаров из БД, преобразует ее в строковый массив и возвращает:
    public String[] jFArrayList() {
        
        // Загрузка коллекции товаров из базы данных:
        ProductDao productDao = new ProductDatabaseDao();
        products = (ArrayList<Product>) productDao.findAll();
    
        // Создание коллекции строк и перевод элементов из коллекции товаров в коллекцию строк:
        ArrayList<String> goodListStr = new ArrayList();
        
        for(int i = 0; i < products.size(); i++) {
            goodListStr.add(products.get(i).toString());
        }
        
        // Преобразование коллекции в массив:
        String goodListStr2[] = goodListStr.toArray(new String[goodListStr.size()]);
        return goodListStr2;
    }
    
    // Преобразует коллекцию заказов в строковый массив и возвращает:
    public String[] jFArrayOrdertList() {
        
        // Создание коллекции строк и перевод элементов из коллекции товаров в коллекцию строк:
        ArrayList<String> orderProductsListStr = new ArrayList();
        
        for(int i = 0; i < orders.size(); i++) {
            orderProductsListStr.add(orders.get(i).toString());
        }
        
        // Преобразование коллекции в массив:
        String orderListStr2[] = orderProductsListStr.toArray(new String[orderProductsListStr.size()]);
        return orderListStr2;
    }
    
    // Преобразует коллекцию товаров в строковый массив и возвращает:
    public String[] jArrayList() {
        // Создание коллекции строк и перевод элементов из коллекции товаров в коллекцию строк:
        ArrayList<String> goodListSt = new ArrayList();
        
        if (products == null) {
            jLabel1.setText("Список товаров пуст, нажмите кнопку \"Обновить склад\"");
        } else {
            for(int i = 0; i < products.size(); i++) {
                goodListSt.add(products.get(i).toString());
            }
            
            // Преобразование коллекции в массив:
            String goodListStr2[] = goodListSt.toArray(new String[goodListSt.size()]);
            return goodListStr2;
        }
        
        return null;
    }
}